% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_edge_elbow.R
\name{geom_edge_elbow}
\alias{geom_edge_elbow}
\alias{geom_edge_elbow}
\alias{geom_edge_elbow2}
\alias{geom_edge_elbow0}
\title{Draw edges as elbows}
\usage{
geom_edge_elbow(mapping = NULL, data = gEdges(), position = "identity",
  arrow = NULL, flipped = FALSE, lineend = "butt", show.legend = NA,
  n = 100, ...)

geom_edge_elbow2(mapping = NULL, data = gEdges("long"),
  position = "identity", arrow = NULL, flipped = FALSE,
  lineend = "butt", show.legend = NA, n = 100, ...)

geom_edge_elbow0(mapping = NULL, data = gEdges(), position = "identity",
  arrow = NULL, flipped = FALSE, lineend = "butt", show.legend = NA,
  ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}}
or \code{\link[ggplot2]{aes_}}. By default x, y, xend, yend, group and
circular are mapped to x, y, xend, yend, edge.id and circular in the edge
data.}

\item{data}{The return of a call to \code{gEdges()} or a data.frame
giving edges in corrent format (see details for for guidance on the format).
See \code{\link{gEdges}} for more details on edge extraction.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{arrow}{Arrow specification, as created by \code{\link[grid]{arrow}}}

\item{flipped}{Logical, Has the layout been flipped by reassigning the
mapping of x, y etc?}

\item{lineend}{Line end style (round, butt, square)}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{n}{The number of points to create along the path.}

\item{...}{other arguments passed on to \code{\link{layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\description{
This geom draws edges as an angle in the same manner as known from classic
dendrogram plots of hierarchical clustering results. In case a circular
transformation has been applied the first line segment will be drawn as an
arc as expected. This geom is only applicable to layouts that return a
direction for the edges (currently \code{\link{layout_dendrogram_dendrogram}}
and \code{\link{layout_dendrogram_dendrogram}}).
}
\details{
Many geom_edge_* layers comes in 3 flavors depending on the level of control
needed over the drawing. The default (no numeric postfix) generate a number
of points (\code{n}) along the edge and draws it as a path. Each point along
the line has a numeric value associated with it giving the position along the
path, and it is therefore possible to show the direction of the edge by
mapping to this e.g. \code{colour = ..index..}. The version postfixed with a
"2" uses the "long" edge format (see \code{\link{gEdges}}) and makes it
possible to interpolate node parameter between the start and end node along
the edge. It is considerable less performant so should only be used if this
is needed. The version postfixed with a "0" draws the edge in the most
performant way, often directly using an appropriate grob from the grid
package, but does not allow for gradients along the edge.
}
\note{
In order to avoid excessive typing edge aesthetic names are
automatically expanded. Because of this it is not necessary to write
\code{edge_colour} within the \code{aes()} call as \code{colour} will
automatically be renamed appropriately.
}
\section{Aesthetics}{

geom_edge_elbow and geom_edge_elbow0 understand the following
aesthetics. Bold aesthetics are automatically set, but can be overridden.
\itemize{
 \item{\strong{x}}
 \item{\strong{y}}
 \item{\strong{xend}}
 \item{\strong{yend}}
 \item{\strong{circular}}
 \item{\strong{direction}}
 \item{edge_colour}
 \item{edge_width}
 \item{edge_linetype}
 \item{edge_alpha}
 \item{filter}
}
geom_edge_elbow2 understand the following aesthetics. Bold aesthetics are
automatically set, but can be overridden.
\itemize{
 \item{\strong{x}}
 \item{\strong{y}}
 \item{\strong{group}}
 \item{\strong{circular}}
 \item{\strong{direction}}
 \item{edge_colour}
 \item{edge_width}
 \item{edge_linetype}
 \item{edge_alpha}
 \item{filter}
}
}

\section{Computed variables}{


\describe{
 \item{index}{The position along the path (not computed for the *0 version)}
}
}

\examples{
irisDen <- as.dendrogram(
  hclust(dist(iris[1:4],
              method='euclidean', ),
         method='ward.D2')
)
irisDen <- dendrapply(irisDen, function(x) {
  attr(x, 'nodePar') <- list(class = sample(letters[1:3], 1))
  attr(x, 'edgePar') <- list(class = sample(letters[1:3], 1))
  x
})

ggraph(irisDen, 'even', circular = TRUE) +
  geom_edge_elbow(aes(alpha = ..index..))

ggraph(irisDen, 'even') +
  geom_edge_elbow2(aes(colour = node.class),
                      gEdges('long', nodePar = 'class'))

ggraph(irisDen, 'dendrogram') +
  geom_edge_elbow0(aes(colour = class))

}
\seealso{
Other geom_edge_*: \code{\link{geom_edge_arc}},
  \code{\link{geom_edge_density}},
  \code{\link{geom_edge_diagonal}},
  \code{\link{geom_edge_fan}},
  \code{\link{geom_edge_hive}},
  \code{\link{geom_edge_link}},
  \code{\link{geom_edge_loop}}
}
\author{
Thomas Lin Pedersen
}
